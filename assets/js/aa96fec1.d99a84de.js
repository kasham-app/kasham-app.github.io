"use strict";(self.webpackChunkjetdocs=self.webpackChunkjetdocs||[]).push([[656],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>h});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),d=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=d(e.components);return a.createElement(s.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),c=d(n),m=r,h=c["".concat(s,".").concat(m)]||c[m]||u[m]||i;return n?a.createElement(h,l(l({ref:t},p),{},{components:n})):a.createElement(h,l({ref:t},p))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[c]="string"==typeof e?e:r,l[1]=o;for(var d=2;d<i;d++)l[d]=n[d];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7487:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>d});var a=n(7462),r=(n(7294),n(3905));const i={},l=void 0,o={unversionedId:"tutorial-basics/middlewares",id:"tutorial-basics/middlewares",title:"middlewares",description:"HTTP middleware in JET provides a convenient mechanism for filtering HTTP requests entering your application. Middleware allows you to perform tasks such as authentication, CORS handling, logging, and more. In JET, all middleware should be stored in the app/Http/Middleware directory.",source:"@site/docs/tutorial-basics/middlewares.md",sourceDirName:"tutorial-basics",slug:"/tutorial-basics/middlewares",permalink:"/1.1/docs/tutorial-basics/middlewares",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"controllers",permalink:"/1.1/docs/tutorial-basics/controllers"},next:{title:"routing",permalink:"/1.1/docs/tutorial-basics/routing"}},s={},d=[],p={toc:d},c="wrapper";function u(e){let{components:t,...n}=e;return(0,r.kt)(c,(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"HTTP middleware in JET provides a convenient mechanism for filtering HTTP requests entering your application. Middleware allows you to perform tasks such as authentication, CORS handling, logging, and more. In JET, all middleware should be stored in the ",(0,r.kt)("inlineCode",{parentName:"p"},"app/Http/Middleware")," directory."),(0,r.kt)("p",null,"To create a new middleware, you can use the "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"php jet jet:make-middleware Examplemddleware\n")),(0,r.kt)("p",null,"command in your terminal. This will generate a new middleware class for you. Let's say we want to create a middleware that checks if the supplied age is greater than 200 and redirects the user if it's not. Here's an example of how the middleware class might look:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"<?php\n\nnamespace Bcoded\\Jet\\Http\\Middleware;\n\nuse Closure;\nuse Bcoded\\Jet\\Support\\JetFacade as Jet;\n\nclass AgeCheckMiddleware\n{\n    public function handle($request, Closure $next)\n    {\n        if ($request->input('age') <= 200) {\n            return redirect('home');\n        }\n\n        return $next($request);\n    }\n}\n")),(0,r.kt)("p",null,"In this example, if the given age is less than or equal to 200, the middleware will return an HTTP redirect to the client. Otherwise, the request will be passed further into the application by calling the ",(0,r.kt)("inlineCode",{parentName:"p"},"$next")," callback with the ",(0,r.kt)("inlineCode",{parentName:"p"},"$request"),"."),(0,r.kt)("p",null,"To register middleware globally for every HTTP request to your application, you can list the middleware class in the ",(0,r.kt)("inlineCode",{parentName:"p"},"kernel.php")," file, located at ",(0,r.kt)("inlineCode",{parentName:"p"},"app/Http/Middleware/Kernel.php"),". Add the middleware class to the ",(0,r.kt)("inlineCode",{parentName:"p"},"$middleware")," array:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"protected $middleware = [\n    // Other middleware classes...\n    \\Bcoded\\Jet\\Http\\Middleware\\AgeCheckMiddleware::class,\n];\n")),(0,r.kt)("p",null,"If you want to assign middleware to specific routes, you can assign a shorthand key to the middleware class in the ",(0,r.kt)("inlineCode",{parentName:"p"},"kernel.php")," file. Use the ",(0,r.kt)("inlineCode",{parentName:"p"},"$routeMiddleware")," array for this:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"protected $routeMiddleware = [\n    // Other middleware mappings...\n    'age.check' => \\Bcoded\\Jet\\Http\\Middleware\\AgeCheckMiddleware::class,\n];\n")),(0,r.kt)("p",null,"Once the middleware has been defined in the ",(0,r.kt)("inlineCode",{parentName:"p"},"kernel.php")," file, you can use the ",(0,r.kt)("inlineCode",{parentName:"p"},"middleware")," key in the route options array to assign middleware to specific routes:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"$router->get('admin/profile', ['middleware' => 'age.check', function () {\n    // Route logic...\n}]);\n")),(0,r.kt)("p",null,"You can also assign multiple middleware to a route by passing an array:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"$router->get('/', ['middleware' => ['first', 'second'], function () {\n    // Route logic...\n}]);\n")),(0,r.kt)("p",null,"When attaching middleware to a controller route, you can use the ",(0,r.kt)("inlineCode",{parentName:"p"},"uses")," key to specify the controller action as a string:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"$router->get('admin/profile', [\n    'middleware' => 'age.check',\n    'uses' => 'AdminController@showProfile'\n]);\n")),(0,r.kt)("p",null,'Middleware can also receive additional custom parameters. For example, if your middleware needs to verify that the authenticated user has a given "role" before performing an action, you can define a parameter in the middleware\'s ',(0,r.kt)("inlineCode",{parentName:"p"},"handle")," method. Here's an example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"public function handle($request, Closure $next, $role)\n{\n    if (! $request->user()->hasRole($role)) {\n        // Redirect or perform some action...\n    }\n\n    return $next($request);\n}\n")),(0,r.kt)("p",null,"To specify middleware parameters when defining a route, separate the middleware name and parameters with a ",(0,r.kt)("inlineCode",{parentName:"p"},":"),". Multiple parameters should be delimited by commas:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"$router->put('post/{id}', ['middleware' => 'role:editor', function ($id) {\n    // Route logic...\n}]);\n")),(0,r.kt)("p",null,"Sometimes a middleware may need to perform additional work after the HTTP response has been sent"),(0,r.kt)("p",null," to the browser. To accomplish this, you can define a ",(0,r.kt)("inlineCode",{parentName:"p"},"terminate")," method in the middleware. This method will be called by JET once the response has been sent. Here's an example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"public function terminate($request, $response)\n{\n    // Perform some post-response tasks...\n}\n")),(0,r.kt)("p",null,"To use terminable middleware, add it to the list of global middleware in the ",(0,r.kt)("inlineCode",{parentName:"p"},"kernel.php")," file."),(0,r.kt)("p",null,"When using the ",(0,r.kt)("inlineCode",{parentName:"p"},"terminate")," method in your middleware, JET will resolve a fresh instance of the middleware from the service container. This means that the ",(0,r.kt)("inlineCode",{parentName:"p"},"handle")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"terminate")," methods will be called on separate instances of the middleware class."),(0,r.kt)("p",null,"If you want to use the same instance of the middleware for both the ",(0,r.kt)("inlineCode",{parentName:"p"},"handle")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"terminate")," methods, you can register the middleware with the container using the container's ",(0,r.kt)("inlineCode",{parentName:"p"},"singleton")," method."),(0,r.kt)("p",null,"Here's an example of how you can register the middleware as a singleton in JET's container:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Open your JET application's app/providers/AppserviceProvider.php file."),(0,r.kt)("li",{parentName:"ol"},"Locate the ",(0,r.kt)("inlineCode",{parentName:"li"},"register")," method. It will look similar to this:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"public function register()\n{\n\n}\n")),(0,r.kt)("ol",{start:3},(0,r.kt)("li",{parentName:"ol"},"use the ",(0,r.kt)("inlineCode",{parentName:"li"},"this")," to get the object of the app instance to register the middleware as a singleton: your code will look similar to this..")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"public function register()\n{\n    $this->$app->singleton(Bcoded\\Jet\\Http\\Middleware\\YourMiddleware::class);\n}\n")),(0,r.kt)("p",null,"By using the ",(0,r.kt)("inlineCode",{parentName:"p"},"singleton")," method, JET will only resolve a single instance of the middleware, and the same instance will be used for both the ",(0,r.kt)("inlineCode",{parentName:"p"},"handle")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"terminate")," methods."),(0,r.kt)("p",null,"Note that modifying the registration on the application container should be done cautiously, as it can have unintended consequences. If you're not familiar with how the container works, it's recommended to seek guidance or consult the JET support for more information. ",(0,r.kt)("inlineCode",{parentName:"p"},"support@jetframework.info")),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"Type responsibly:: do not take central nervous  depresant's before typing, as Middlewares are very senstive")))}u.isMDXComponent=!0}}]);