"use strict";(self.webpackChunkjetdocs=self.webpackChunkjetdocs||[]).push([[1768],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>h});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=a.createContext({}),c=function(e){var n=a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},u=function(e){var n=c(e.components);return a.createElement(l.Provider,{value:n},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=c(t),m=r,h=p["".concat(l,".").concat(m)]||p[m]||d[m]||o;return t?a.createElement(h,s(s({ref:n},u),{},{components:t})):a.createElement(h,s({ref:n},u))}));function h(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,s=new Array(o);s[0]=m;var i={};for(var l in n)hasOwnProperty.call(n,l)&&(i[l]=n[l]);i.originalType=e,i[p]="string"==typeof e?e:r,s[1]=i;for(var c=2;c<o;c++)s[c]=t[c];return a.createElement.apply(null,s)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},2450:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var a=t(7462),r=(t(7294),t(3905));const o={},s="User Balance and Transactions - GET Request",i={unversionedId:"tutorial-basics/userbalance",id:"tutorial-basics/userbalance",title:"User Balance and Transactions - GET Request",description:"The User Balance and Transactions endpoint allows you to retrieve a user's balance and transaction history. This endpoint is accessible through a GET request to the following URL:",source:"@site/docs/tutorial-basics/userbalance.md",sourceDirName:"tutorial-basics",slug:"/tutorial-basics/userbalance",permalink:"/docs/tutorial-basics/userbalance",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Update User Profile Endpoint - POST Request",permalink:"/docs/tutorial-basics/updateuser"},next:{title:"User Profile and  Retrieval - GET Request",permalink:"/docs/tutorial-basics/userprofile"}},l={},c=[{value:"Authentication",id:"authentication",level:3},{value:"Response Structure",id:"response-structure",level:3},{value:"Retrieving User Balance",id:"retrieving-user-balance",level:3},{value:"Retrieving User Transactions",id:"retrieving-user-transactions",level:3}],u={toc:c},p="wrapper";function d(e){let{components:n,...t}=e;return(0,r.kt)(p,(0,a.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"user-balance-and-transactions---get-request"},"User Balance and Transactions - GET Request"),(0,r.kt)("p",null,"The ",(0,r.kt)("strong",{parentName:"p"},"User Balance and Transactions")," endpoint allows you to retrieve a user's balance and transaction history. This endpoint is accessible through a GET request to the following URL:"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Endpoint:")," "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"https://kashamng.com/api/v1/user\n")),(0,r.kt)("h3",{id:"authentication"},"Authentication"),(0,r.kt)("p",null,"To access the User Balance and Transactions endpoint, you need to include the ",(0,r.kt)("strong",{parentName:"p"},"Authorization")," header with the ",(0,r.kt)("strong",{parentName:"p"},"Bearer")," token. This token should be either the login or registration token obtained during user authentication."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example Header:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Authorization: Bearer <your-token>\n")),(0,r.kt)("h3",{id:"response-structure"},"Response Structure"),(0,r.kt)("p",null,"Upon successfully accessing the endpoint, you'll receive a JSON response containing the user's information, balance, and transactions. Here's an example response:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "message": {\n        "id": 1,\n        "name": "John Doe",\n        "email": "dakingeorge58@gmail.com",\n        "role": null,\n        "account_type": "merchant",\n        "full_name": "John Doe",\n        "phone_number": "1234567890",\n        "affiliate_id": "164e4a6b934614",\n        "referred_by": null,\n        "onboarding": {\n            // ...onboarding data\n        },\n        "is_pro": "1",\n        "api_requests": "1",\n        "sms_code": null,\n        "email_code": "114626",\n        "stateof_origin": null,\n        "reasonfor_kasham": null,\n        "pin_code": null,\n        "selfie_upload": "2023_08_22_190201selfie_upload.png",\n        "document_upload": "2023_08_22_190201document_upload.png",\n        "bvn_number": "986542567",\n        "kasham_tag": "@codedweb",\n        "deleted_at": null,\n        "created_at": "2023-08-22T13:14:49.000000Z",\n        "updated_at": "2023-08-22T18:12:18.000000Z",\n        "transactions": [\n            {\n                // ...transaction data\n            }\n        ],\n        "userwallet": [\n            {\n                // ...user wallet data\n            }\n        ]\n    }\n}\n')),(0,r.kt)("h3",{id:"retrieving-user-balance"},"Retrieving User Balance"),(0,r.kt)("p",null,"To retrieve the user's balance from the response, you can access the ",(0,r.kt)("inlineCode",{parentName:"p"},'"userwallet"')," key and retrieve the ",(0,r.kt)("inlineCode",{parentName:"p"},'"balance"')," value. Here's an example using JavaScript:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"// for instance ,if you have fetched the response from the API\nconst userResponse = /* ... */;\nconst userBalance = userResponse.message.userwallet[0].balance;\nconsole.log(`User Balance: ${userBalance}`);\n")),(0,r.kt)("h3",{id:"retrieving-user-transactions"},"Retrieving User Transactions"),(0,r.kt)("p",null,"To retrieve the user's transactions from the response, you can access the ",(0,r.kt)("inlineCode",{parentName:"p"},'"transactions"')," key. This will give you an array of transaction objects containing details about each transaction. Here's an example using JavaScript:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"// for example now, if you have fetched the response from the API\nconst userResponse = /* ... */;\nconst userTransactions = userResponse.message.transactions;\nuserTransactions.forEach(transaction => {\n    console.log(`Transaction ID: ${transaction.transaction_id}`);\n    console.log(`Amount: ${transaction.amount}`);\n    console.log(`Status: ${transaction.status}`);\n    // ... other transaction details\n});\n")),(0,r.kt)("p",null,"By following these steps and utilizing the provided example code, you'll be able to retrieve both the user's balance and transaction history from the API response in your mobile application. Just remember to include the ",(0,r.kt)("strong",{parentName:"p"},"Authorization")," header with the appropriate token for authentication."))}d.isMDXComponent=!0}}]);