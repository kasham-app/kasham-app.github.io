"use strict";(self.webpackChunkjetdocs=self.webpackChunkjetdocs||[]).push([[39],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>h});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),u=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=u(e.components);return r.createElement(l.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),c=u(n),m=a,h=c["".concat(l,".").concat(m)]||c[m]||d[m]||i;return n?r.createElement(h,s(s({ref:t},p),{},{components:n})):r.createElement(h,s({ref:t},p))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,s=new Array(i);s[0]=m;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o[c]="string"==typeof e?e:a,s[1]=o;for(var u=2;u<i;u++)s[u]=n[u];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},4266:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>i,metadata:()=>o,toc:()=>u});var r=n(7462),a=(n(7294),n(3905));const i={},s="Registeration Endpoint - POST Request",o={unversionedId:"tutorial-basics/Registeration",id:"tutorial-basics/Registeration",title:"Registeration Endpoint - POST Request",description:"The user data structure represents a user's profile within the Kasham application. This data provides essential information about the user, including personal details, account status, and onboarding progress. Here is a breakdown of the different fields present in the user registeration model:",source:"@site/docs/tutorial-basics/Registeration.md",sourceDirName:"tutorial-basics",slug:"/tutorial-basics/Registeration",permalink:"/docs/tutorial-basics/Registeration",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Signout Endpoint - POST Request",permalink:"/docs/tutorial-basics/Logout"},next:{title:"Forget Password - POST Route",permalink:"/docs/tutorial-basics/forgetpassword"}},l={},u=[{value:"Registration Endpoint - POST Request",id:"registration-endpoint---post-request",level:2},{value:"Required Parameters",id:"required-parameters",level:3},{value:"Optional Cookie",id:"optional-cookie",level:3},{value:"Optional URL Parameter",id:"optional-url-parameter",level:3},{value:"Registration Process Notes",id:"registration-process-notes",level:3},{value:"Registration Response",id:"registration-response",level:3}],p={toc:u},c="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(c,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"registeration-endpoint---post-request"},"Registeration Endpoint - POST Request"),(0,a.kt)("p",null,"The user data structure represents a user's profile within the Kasham application. This data provides essential information about the user, including personal details, account status, and onboarding progress. Here is a breakdown of the different fields present in the user registeration model:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-text",metastring:'title="Registeration Fields"',title:'"Registeration','Fields"':!0},"// highlight-start\n\nFields:\n\n1. id (integer): The unique identifier for the user.\n\n2. name (string): The user's display name.\n\n3. email (string): The user's email address.\n\n4. email_verified_at (string or null): The timestamp indicating when the user's email was verified. If null,the email is yet to be verified.\n\n5. role (string or null): The user's role or permission level within the system.\n\n6. account_type (string): The type of account the user holds (e.g., \"premium\").\n\n7. full_name (string): The user's full name.\n\n8. phone_number (string): The user's phone number.\n\n9. affiliate_id (string): The unique affiliate ID associated with the user.\n\n10. referred_by (string or null): The user ID of the user who referred this user, if applicable.\n\n11. onboarding (object): An object containing information about the user's onboarding status.\n\n12.age (integer): The user's age.\n\n13. city (string): The city where the user is located.\n\n14. status (string): The onboarding status of the user (e.g., \"inactive\", \"active\", etc.).\n\n15. deleted_at (string or null): The timestamp indicating when the user was deleted, if applicable.\n\n16. created_at (string): The timestamp indicating when the user's profile was created.\n\n17. updated_at (string): The timestamp indicating when the user's profile was last updated.\n")),(0,a.kt)("p",null,"Example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "id": 2,\n    "name": "John Doe",\n    "email": "dakingeorge58@gmail.com",\n    "email_verified_at": null,\n    "role": null,\n    "account_type": "premium",\n    "full_name": "John Doe",\n    "phone_number": "123-456-7890",\n    "affiliate_id": "164da53995c2c8",\n    "referred_by": null,\n    "onboarding": {\n        "age": 25,\n        "city": "Los Angeles",\n        "status": "inactive"\n    },\n    "deleted_at": null,\n    "created_at": "2023-08-14T17:17:29.000000Z",\n    "updated_at": "2023-08-15T17:25:51.000000Z"\n}\n\n')),(0,a.kt)("admonition",{title:"Installation",type:"danger"},(0,a.kt)("h1",{parentName:"admonition",id:"usage"},(0,a.kt)("inlineCode",{parentName:"h1"},"Usage")),(0,a.kt)("p",{parentName:"admonition"},"The user data structure provides valuable insights into each user's profile, enabling you to personalize their experience, manage their account, and tailor financial services based on their preferences and information."),(0,a.kt)("p",{parentName:"admonition"},"Feel free to explore other sections of this documentation to learn more about interacting with the Kasham API and utilizing user data to create dynamic financial solutions for your users.")),(0,a.kt)("h2",{id:"registration-endpoint---post-request"},"Registration Endpoint - POST Request"),(0,a.kt)("p",null,"The registration endpoint allows users to sign up for the Kasham application. By sending a POST request to the following URL, users can create their accounts:"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Endpoint:")," "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"https://kashamng.com/api/v1/signup\n\n")),(0,a.kt)("h3",{id:"required-parameters"},"Required Parameters"),(0,a.kt)("p",null,"In order to successfully register a user, the following parameters are required in the request body. If any of these parameters are missing, the API will return an error response indicating the missing fields."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "email": "user@example.com",\n    "password": "secure_password",\n    "account_type": "premium",\n    "full_name": "John Doe",\n    "phone_number": "123-456-7890"\n}\n')),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"email")," (string): The email address of the user."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"password")," (string): The password chosen by the user."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"account_type"),' (string): The type of account the user wants to create (e.g., "premium").'),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"full_name")," (string): The full name of the user."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"phone_number")," (string): The phone number of the user.")),(0,a.kt)("h3",{id:"optional-cookie"},"Optional Cookie"),(0,a.kt)("p",null,'A cookie named "referral" can be included in the request to indicate a referral source.'),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Cookie:")," ",(0,a.kt)("inlineCode",{parentName:"li"},"referral"))),(0,a.kt)("h3",{id:"optional-url-parameter"},"Optional URL Parameter"),(0,a.kt)("p",null,'An optional query parameter "ref" can be added to the URL to indicate a referral through a referral link.'),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"URL Parameter:")," ",(0,a.kt)("inlineCode",{parentName:"li"},"?ref"))),(0,a.kt)("h3",{id:"registration-process-notes"},"Registration Process Notes"),(0,a.kt)("p",null,'If the incoming API request from the mobile app includes a cookie named "referral," the system recognizes that the user has already been referred, and Laravel proceeds with the user registration. Additionally, if the "ref" query parameter is present in the URL, it indicates that the user has been referred through a referral link. In this case, Laravel redirects the user back to the same URL while adding a cookie named "referral" with the value of the person who referred the user.'),(0,a.kt)("p",null,"Please note that the referral system is optional and can be implemented based on your development requirements."),(0,a.kt)("h3",{id:"registration-response"},"Registration Response"),(0,a.kt)("p",null,"After a successful registration, the API will return the following response:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "message": "Your account has been created successfully.",\n    "access_token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9...<token data>",\n    "registration-token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9...<registration token data>"\n}\n')),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"message")," (string): A success message indicating the account creation."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"access_token")," (string): An access token for authentication and authorization."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"registration-token")," (string): A registration token for account verification and further operations.")),(0,a.kt)("p",null,"This response provides the necessary tokens for the user to interact with the application's authenticated features."),(0,a.kt)("p",null,"Feel free to use this information to integrate the registration process into your application and provide users with a seamless onboarding experience. If you have any further questions or need assistance with the integration, please don't hesitate to reach out. ",(0,a.kt)("a",{parentName:"p",href:"mailto:dakingeorge58@gmail.com"},"dakingeorge58@gmail.com")))}d.isMDXComponent=!0}}]);