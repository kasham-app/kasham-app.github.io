"use strict";(self.webpackChunkjetdocs=self.webpackChunkjetdocs||[]).push([[9],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),u=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(l.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),p=u(n),m=a,f=p["".concat(l,".").concat(m)]||p[m]||d[m]||o;return n?r.createElement(f,s(s({ref:t},c),{},{components:n})):r.createElement(f,s({ref:t},c))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,s=new Array(o);s[0]=m;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[p]="string"==typeof e?e:a,s[1]=i;for(var u=2;u<o;u++)s[u]=n[u];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},3412:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>u});var r=n(7462),a=(n(7294),n(3905));const o={},s="Login Endpoint - POST Request",i={unversionedId:"tutorial-basics/signin",id:"tutorial-basics/signin",title:"Login Endpoint - POST Request",description:"To log in a user, you can send a POST request to the following endpoint:",source:"@site/docs/tutorial-basics/signin.md",sourceDirName:"tutorial-basics",slug:"/tutorial-basics/signin",permalink:"/docs/tutorial-basics/signin",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Forget Password - POST Route",permalink:"/docs/tutorial-basics/forgetpassword"},next:{title:"Email Code Verification - POST Route",permalink:"/docs/tutorial-basics/verifyemail"}},l={},u=[{value:"Error Response",id:"error-response",level:3},{value:"Invalid Credentials",id:"invalid-credentials",level:3},{value:"Form Parameters",id:"form-parameters",level:3},{value:"Success Response",id:"success-response",level:3},{value:"Token Name",id:"token-name",level:3}],c={toc:u},p="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(p,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"login-endpoint---post-request"},"Login Endpoint - POST Request"),(0,a.kt)("p",null,"To log in a user, you can send a POST request to the following endpoint:"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Endpoint:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"https://kashamng.com/api/v1/signin\n")),(0,a.kt)("h3",{id:"error-response"},"Error Response"),(0,a.kt)("p",null,"If any required parameters are missing, the API will return an error response:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "errors": {\n        "email": [\n            "The email field is required."\n        ],\n        "password": [\n            "The password field is required."\n        ]\n    }\n}\n')),(0,a.kt)("h3",{id:"invalid-credentials"},"Invalid Credentials"),(0,a.kt)("p",null,"If the provided email or password is incorrect, the API will respond with the following message:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "message": "Invalid credentials"\n}\n')),(0,a.kt)("h3",{id:"form-parameters"},"Form Parameters"),(0,a.kt)("p",null,"Include the following form parameters in the request body:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"email:")," The user's email address."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"password:")," The user's password.")),(0,a.kt)("h3",{id:"success-response"},"Success Response"),(0,a.kt)("p",null,"After a successful login, the API will return the following response:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "message": "Logged in successfully",\n    "access_token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9...<access token data>"\n}\n')),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"message:")," A success message confirming the successful login."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"access_token:")," An access token for authentication and authorization.")),(0,a.kt)("h3",{id:"token-name"},"Token Name"),(0,a.kt)("p",null,"Token Name: ",(0,a.kt)("inlineCode",{parentName:"p"},"login-token")),(0,a.kt)("p",null,"Feel free to integrate this information into your Docusaurus documentation. This Markdown-formatted content should display nicely within your documentation site. If you have any further questions or need additional assistance, please don't hesitate to ask!"))}d.isMDXComponent=!0}}]);